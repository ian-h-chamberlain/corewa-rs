searchState.loadedDescShard("corewars_parser", 0, "This module is used for parsing a Redcode program. It …\nOffset label declaration with no instruction.\nEmpty EQU substitution.\nContains the error value and zero or more warnings\nAn error that occurred while parsing a warrior.\nThe given opcode was not given enough arguments.\nAn invalid warrior origin (not a positive integer) was …\nThe input string was ill-formed Redcode syntax.\nThe warrior contained a reference to a label that doesn’…\nContains the success value and zero or more warnings\nAttempt to define the warrior origin more than once.\n<code>Result</code> mimics the <code>std::result::Result</code> type, but each …\nA warning that occurred while parsing a warrior.\nCreate an <code>Err</code> variant from an error.\nUnwrap the parse result, panicking with the given message …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an <code>Ok</code> variant from a value.\nParse a given input string into a <code>Result</code>. If successful the\nUnwrap the parse result, panicking if it was not an <code>Ok</code>.")